                            ---=== SSH ===---


# --- 1 ---

/.ssh:

id_dsa / id_dsa.pub
id_rsa / id_rsa.pub

# Ищим файл с именем id_dsa или id_rsa.
# И соответствующий ему файл с расширением .pub
# .pub — это открытый ключ, а второй файл — приватный ключ.

# Если указанные файлы отсутствуют (или даже нет каталога .ssh)
$ ssh-keygen

# or

$ ssh-keygen -t rsa -b 4096 -C " your_email@example.com "

# Сменить пароль на ключ можно с помощью команды
$ ssh-keygen -p

# Сначала программа попросит указать расположение файла 
# для сохранения ключа (.ssh/id_rsa)

# Если не хотите вводить пароль каждый раз при использовании ключа, 
# то можно оставить его пустым или использовать программу ssh-agent.

# Если решили использовать пароль для приватного ключа, то настоятельно 
# рекомендуется использовать опцию -o, 

# Теперь каждый пользователь должен отправить свой открытый ключ вам или тому, 
# кто администрирует сервер (подразумевается, что ваш SSH-сервер уже настроен
# на работу с открытыми ключами). Для этого достаточно скопировать содержимое 
# файла с расширением .pub и отправить его по электронной почте. 

# --- 2 ---

# Включить агент ssh 
$ eval $(ssh-agent -s)

# Авторизовать ssh ключь.
$ ssh-add ~/.ssh/id_rsa

# Проверка садержимого 
$ ssh-add -l

# Удалить все ключи.
$ ssh-add -D 

# --- server ---

# add ssh key.pub for server
.ssh/authorized_keys

# ssh на нестандартном порту
$ ssh-copy-id '-p 443 user@server'

$ ssh-copy-id SERVER_NAME

	login
	pasword

# Совет (Убрать доступ на сервер по паролю)
$ sudo vim /etc/ssh/sshd_config

# restart ssh
$ sudo service ssh restart

# --- SSH alias ---

# login for ssh
$ ssh soket

# home dir
$ vim ~/ssh/config

# add in file

Host alias
     Hostname alias.host_name
     User user_name
     Port 22  


# root
ssh -o "User=root" alias

# --- GIT ---

# Проверка 
$ git remote -v

# изменить с html на ssh
$ git remote set-url origin git_ssh
