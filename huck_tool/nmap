# --------======= Nmap on Linux sistem ========------------

### Scan a single ip address ###
nmap 192.168.1.1

## Scan a host name ###
nmap server1.sedicomm.com

## Scan a host name with more info###
nmap -v server1.sedicomm.com

## works with same subnet i.e. 192.168.1.0/24
nmap 192.168.1.1 192.168.1.2 192.168.1.3
nmap 192.168.1.1,2,3
nmap 192.168.1.1-20
nmap 192.168.1.*
nmap 192.168.1.0/24

# read in file
cat > /tmp/test.txt

# Пример входных данных:
	server1.sedicomm.com
    192.168.1.0/24
    192.168.1.1/24
    10.1.2.3
    localhost

nmap -iL /tmp/test.txt

# Сканирование с исключением хостов/сетей (IPv4)
nmap 192.168.1.0/24 --exclude 192.168.1.5
nmap 192.168.1.0/24 --exclude 192.168.1.5,192.168.1.254

nmap -iL /tmp/scanlist.txt --excludefile /tmp/exclude.txt

# Включение скрипта сканирования ОС и определения версии
nmap -A 192.168.1.254
nmap -v -A 192.168.1.1
nmap -A -iL /tmp/scanlist.txt 

# Проверка, защищен ли хост/сеть брандмауэром
nmap -sA 192.168.1.254
nmap -sA server1.sedicomm.com

# Сканирование хоста, в случае если он защищен брандмауэром
nmap -PN 192.168.1.1
nmap -PN server1.sedicomm.com
  
# Сканирование хоста/адреса IPv6
# Опция -6 включает сканирование IPv6. Синтаксис:
nmap -6 IPv6-Address-Here
nmap -6 server1.sedicomm.com
nmap -6 2607:f0d0:1002:51::4
nmap -v A -6 2607:f0d0:1002:51::4

# Сканирование сети и поиск устройств/
# серверов которые работают
# Этот метод называется host discovery или ping scan:
nmap -sP 192.168.1.0/24

# Выполнение быстрого сканирования
nmap -F 192.168.1.1

# Поиск причины, по которой порт находится в определенном состоянии
nmap --reason 192.168.1.1
nmap --reason server1.sedicomm.com

# Поиск открытых портов
nmap --open 192.168.1.1
nmap --open server1.sedicomm.com

# Просмотр интерфейсов хостов и маршрутов
# Эта функция полезна для отладки (такие команды как ip, 
# route или netstat, выполняют вывод с использованием nmap):
nmap --iflist

# Сканирование определенных портов
nmap -p [port] hostName
## Scan port 80
nmap -p 80 192.168.1.1

## Scan TCP port 80
nmap -p T:80 192.168.1.1

## Scan UDP port 53
nmap -p U:53 192.168.1.1

## Scan two ports ##
nmap -p 80,443 192.168.1.1

## Scan port ranges ##
nmap -p 80-200 192.168.1.1

## Combine all options ##
nmap -p U:53,111,137,T:21-25,80,139,8080 192.168.1.1
nmap -p U:53,111,137,T:21-25,80,139,8080 server1.sedicomm.com
nmap -v -sU -sT -p U:53,111,137,T:21-25,80,139,8080 192.168.1.254

## Scan all ports with * wildcard ##
nmap -p "*" 192.168.1.1

## Scan top ports i.e. scan $number most common ports ##
nmap --top-ports 5 192.168.1.1
nmap --top-ports 10 192.168.1.1

# Самый быстрый способ просканировать все ваши устройства/
# компьютеры на наличие открытых портов
nmap -T5 192.168.1.0/24
  
# Обнаружение удаленной операционной системы
# Вы можете идентифицировать приложения удалённого хоста 
# или удалённую ОС, используя опцию -O:
nmap -O 192.168.1.1
nmap -O --osscan-guess 192.168.1.1
nmap -v -O --osscan-guess 192.168.1.1

# Определение номера версий удаленных сервисов (сервер/демон).
nmap -sV 192.168.1.1

# Сканирование хоста с использованием TCP ACK (PA) и 
# TCP Syn (PS) ping
# Если брандмауэр блокирует стандартные запросы ICMP, 
# попробуйте следующие методы обнаружения хоста:
nmap -PS 192.168.1.1
nmap -PS 80,21,443 192.168.1.1
nmap -PA 192.168.1.1
nmap -PA 80,21,200-512 192.168.1.1

# Сканирование хоста с помощью IP протокола ping
nmap -PO 192.168.1.1  

# Сканирование хоста с помощью UDP-пинга
# Это сканирование обходит межсетевые экраны и фильтры, 
# которые могут отобразить только TCP:
nmap -PU 192.168.1.1
nmap -PU 2000.2001 192.168.1.1

# Поиск наиболее часто используемых портов TCP, 
# с использованием TCP SYN Scan
### Stealthy scan ###
nmap -sS 192.168.1.1

### Find out the most commonly used TCP ports using 
#TCP connect scan (warning: no stealth scan)
### OS Fingerprinting ###
nmap -sT 192.168.1.1

### Find out the most commonly used TCP ports using TCP ACK scan
nmap -sA 192.168.1.1

### Find out the most commonly used TCP ports using TCP Window scan
nmap -sW 192.168.1.1

### Find out the most commonly used TCP ports using TCP Maimon scan
nmap -sM 192.168.1.1

# Сканирование хоста на наличие UDP-сервисов (UDP scan)
# Самые популярные сервисы в интернете работают по протоколу TCP. 
# Это такие службы как DNS, SNMP и DHCP являются тремя наиболее 
# распространенными службами, которые используют UDP. 
# Используйте следующий синтаксис для поиска служб UDP:
nmap -sU nas03
nmap -sU 192.168.1.1

# Сканирование для протокола IP
# Этот тип сканирования позволяет определить, какие протоколы 
# IP (TCP, ICMP, IGMP и т.д.) поддерживаются целевыми машинами:
nmap -sO 192.168.1.1

**********************
# Сканирование брандмауэра на предмет уязвимости
# Следующие типы сканирования используют небольшую лазейку в TCP 
# и подходят для проверки соответствия настроек безопасности для 
# защиты от распространенных атак:
#
## TCP Null Scan to fool a firewall to generate a response ##
## Does not set any bits (TCP flag header is 0) ##
nmap -sN 192.168.1.254

## TCP Fin scan to check firewall ##
## Sets just the TCP FIN bit ##
nmap -sF 192.168.1.254

## TCP Xmas scan to check firewall ##
## Sets the FIN, PSH, and URG flags, 
## lighting the packet up like a Christmas tree ##
nmap -sX 192.168.1.254

# Сканирование брандмауэра на наличие фрагментов пакетов
# Флаг -f заставляет данное сканирование (включая проверки ping) 
# использовать крошечные фрагментированные IP-пакеты. 
# Идея состоит в том, чтобы разделить заголовок TCP на несколько 
# пакетов, чтобы усложнить фильтрацию пакетов, усложнить работу 
# системам обнаружения вторжений и т.д.
nmap -f 192.168.1.1
nmap -f fw2.nixcraft.net.in
nmap -f 15 fw2.nixcraft.net.in

## Set your own offset size with the --mtu option ##
nmap --mtu 32 192.168.1.1
  
******************
# Скрытое сканирование с ловушкой
# Флаг -D показывает удаленному хосту, что хосты, которые вы 
# указали в качестве ловушек, также сканируют целевую сеть. 
# Таким образом, их IDS могут сообщать о 5-10 сканированиях 
# портов с уникальных IP-адресов, но они не будут знать, какой 
# IP сканировали они, а какие были отсканированы хостами-ловушками:

nmap -n -Ddecoy-ip1,decoy-ip2,your-own-ip,decoy-ip3,decoy-ip4 remote-host-ip

nmap -n -D192.168.1.5,10.5.1.2,172.1.2.4,3.4.2.1 192.168.1.5

# Сканирование брандмауэра на предмет спуфинга MAC-адресов
### Spoof your MAC address ##
nmap --spoof-mac MAC-ADDRESS-HERE 192.168.1.1

### Add other options ###
nmap -v -sT -PN --spoof-mac MAC-ADDRESS-HERE 192.168.1.1

### Use a random MAC address ###
### The number 0, means nmap chooses a completely random 
#MAC address ###
nmap -v -sT -PN --spoof-mac 0 192.168.1.1

# Сохранение вывода в текстовый файл
# Синтаксис:
nmap 192.168.1.1 > output.txt
nmap -oN /path/to/filename 192.168.1.1
nmap -oN output.txt 192.168.1.1

# Сканирование веб-серверов и каналов в Nikto
nmap -p80 192.168.1.2/24 -oG - | /path/to/nikto.pl -h -
nmap -p80,443 192.168.1.2/24 -oG - | /path/to/nikto.pl -h -
  
# Ускорение сканирования nmap
Чтобы увеличить скорость сканирования nmap передайте флаг -T:
nmap -v -sS -A -T4 192.168.2.5

# ----------==========================------------------
